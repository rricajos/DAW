---
import LanguagesBar from "../components/LanguagesBar.astro";

interface Props {
	title: string;
	currentBlob: string;

	lastBlob: string;

	description: string;
	href: string;
	stat: string;
}

// Extrae las propiedades del componente Astro
const { href, title, description, currentBlob, lastBlob, stat } = Astro.props;
console.log(stat);

// Determina el estado del card basado en la propiedad 'stat'
const getStatusInfo = (stat: string) => {
	switch (stat) {
		case "-":
			return { bgcolor: "background-color: #fbff00;", text: "Desactualizado" };
		case "+":
			return {
				bgcolor: "background-color: #ff0000;",
				text: "Commits no registrados",
			};
		case "U":
			return {
				bgcolor: "background-color: #ff0000;",
				text: "Conflictos de Union/Merge",
			};
		case "":
			return { bgcolor: "background-color: #00ff00;", text: "Actualizado" };
		default:
			return {
				bgcolor: "background-color: #fff;",
				text: "Estado unkown",
			};
	}
};

const { bgcolor, text } = getStatusInfo(stat);
---

<li class="link-card">
	<a href={href}>
		<!-- <p id="description">
			{description} -->
		<!-- <span>&rarr;</span> -->
		<!-- </p> -->
		<h2 id="body">
			{title}
		</h2>
		<span class="stat-tag">
			<button> <div>&#10063;</div> {currentBlob} </button>
			<button> <div style={bgcolor} class="dot"></div><div>{text}</div> </button>
		
	
		</span>
		<div id="languages">
			<LanguagesBar />
		</div>
	</a>
</li>

<style>
	.dot {
		position: relative;
	
		width: 8px;
		height: 8px;
		border-radius: 50%;
	
		
	}
	#languages {
		position: absolute;
		bottom: 0;
		left: 0;
		width: 100%;
	}
	p {
		text-align: center;
	}
	button {
		position: relative;
		display: flex;
		justify-content: flex-start;
		align-items: center;
		gap: 8px;
		background-color: #17191e;
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
		padding: 0.5rem 1rem;
		color: white;
		cursor: pointer;
		border: none;
		font-size: 1rem;
		border-radius: 1rem;
	}
	.stat-tag {
		display: flex;
		justify-content: flex-start;
		align-items: center;
		gap: 8px;
		width: auto;


		font-size: 1rem;
	}
	.link-card {
		position: relative;
		list-style: none;
		display: flex;
		padding: 1px;
		background-color: #23262d;
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
		overflow: hidden;
	}
	.link-card > a {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		color: white;
		background-color: #23262d;
		opacity: 0.8;
	}
	h2 {
		text-align: left;
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}

	.link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	}
</style>
